import { useState } from 'react';
import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import Icon from '@/components/ui/icon';
import { toast } from 'sonner';

interface User {
  role: 'guest' | 'user' | 'admin';
  hasPro: boolean;
  messagesUsed: number;
}

interface ProfileSectionProps {
  user: User;
  setUser: React.Dispatch<React.SetStateAction<User>>;
}

const ProfileSection = ({ user, setUser }: ProfileSectionProps) => {
  const [showAdminLogin, setShowAdminLogin] = useState(false);
  const [adminUsername, setAdminUsername] = useState('');
  const [adminPassword, setAdminPassword] = useState('');

  const ADMIN_CREDENTIALS = {
    username: 'skzry',
    password: 'R.ofical.1'
  };

  const handleLogin = (role: 'user' | 'admin') => {
    if (role === 'admin') {
      setShowAdminLogin(true);
      return;
    }
    setUser({
      role,
      hasPro: false,
      messagesUsed: 0
    });
    toast.success('–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å');
  };

  const handleAdminLogin = () => {
    if (adminUsername === ADMIN_CREDENTIALS.username && adminPassword === ADMIN_CREDENTIALS.password) {
      setUser({
        role: 'admin',
        hasPro: false,
        messagesUsed: 0
      });
      toast.success('–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä');
      setShowAdminLogin(false);
      setAdminUsername('');
      setAdminPassword('');
    } else {
      toast.error('–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å');
    }
  };

  const handleLogout = () => {
    setUser({
      role: 'guest',
      hasPro: false,
      messagesUsed: 0
    });
    toast.success('–í—ã –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
  };

  const grantProAccess = () => {
    if (user.role === 'admin') {
      setUser(prev => ({ ...prev, hasPro: true }));
      toast.success('PRO —Å—Ç–∞—Ç—É—Å –≤—ã–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é');
    }
  };

  const revokeProAccess = () => {
    if (user.role === 'admin') {
      setUser(prev => ({ ...prev, hasPro: false }));
      toast.success('PRO —Å—Ç–∞—Ç—É—Å –æ—Ç–æ–∑–≤–∞–Ω');
    }
  };

  return (
    <div className="max-w-3xl mx-auto space-y-6">
      <Card className="p-8 bg-white shadow-xl rounded-2xl">
        <div className="flex items-center gap-4 mb-6">
          <div className="w-20 h-20 rounded-full bg-gradient-to-br from-indigo-500 to-purple-600 flex items-center justify-center">
            <Icon name="User" className="text-white" size={40} />
          </div>
          <div className="flex-1">
            <h2 className="text-2xl font-bold mb-2">–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h2>
            <div className="flex gap-2">
              <Badge className={`${
                user.role === 'admin' ? 'bg-red-500' :
                user.role === 'user' ? 'bg-blue-500' :
                'bg-gray-500'
              }`}>
                {user.role === 'admin' ? 'üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' :
                 user.role === 'user' ? 'üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' :
                 'üåê –ì–æ—Å—Ç—å'}
              </Badge>
              {user.hasPro && (
                <Badge className="bg-gradient-to-r from-yellow-500 to-orange-500">
                  ‚≠ê PRO
                </Badge>
              )}
            </div>
          </div>
        </div>

        <div className="space-y-4 mb-6">
          <div className="p-4 bg-gray-50 rounded-xl">
            <div className="flex justify-between items-center mb-2">
              <span className="text-sm font-medium text-gray-600">–°—Ç–∞—Ç—É—Å –∞–∫–∫–∞—É–Ω—Ç–∞</span>
              <span className="text-sm font-bold">
                {user.role === 'admin' ? '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' :
                 user.role === 'user' && user.hasPro ? 'PRO –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' :
                 user.role === 'user' ? '–ë–∞–∑–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' :
                 '–ì–æ—Å—Ç—å'}
              </span>
            </div>
          </div>

          <div className="p-4 bg-gray-50 rounded-xl">
            <div className="flex justify-between items-center mb-2">
              <span className="text-sm font-medium text-gray-600">–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π</span>
              <span className="text-sm font-bold">{user.messagesUsed}</span>
            </div>
          </div>

          <div className="p-4 bg-gray-50 rounded-xl">
            <div className="flex justify-between items-center mb-2">
              <span className="text-sm font-medium text-gray-600">–î–æ—Å—Ç—É–ø –∫ AI</span>
              <span className="text-sm font-bold">
                {user.role === 'admin' ? '‚ôæÔ∏è –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π' :
                 user.hasPro ? '‚ôæÔ∏è –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π' :
                 '5 —Å–æ–æ–±—â–µ–Ω–∏–π'}
              </span>
            </div>
          </div>
        </div>

        {user.role === 'guest' && !showAdminLogin && (
          <div className="space-y-3">
            <p className="text-center text-gray-600 mb-4">–í–æ–π–¥–∏—Ç–µ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º</p>
            <Button
              onClick={() => handleLogin('user')}
              className="w-full rounded-xl bg-gradient-to-r from-indigo-500 to-purple-600 hover:from-indigo-600 hover:to-purple-700"
            >
              <Icon name="LogIn" className="mr-2" size={18} />
              –í–æ–π—Ç–∏ –∫–∞–∫ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            </Button>
            <Button
              onClick={() => handleLogin('admin')}
              className="w-full rounded-xl bg-gradient-to-r from-red-500 to-pink-600 hover:from-red-600 hover:to-pink-700"
            >
              <Icon name="Shield" className="mr-2" size={18} />
              –í–æ–π—Ç–∏ –∫–∞–∫ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
            </Button>
          </div>
        )}

        {user.role === 'guest' && showAdminLogin && (
          <div className="space-y-4">
            <div>
              <Label htmlFor="admin-username" className="mb-2 block">–õ–æ–≥–∏–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</Label>
              <Input
                id="admin-username"
                type="text"
                value={adminUsername}
                onChange={(e) => setAdminUsername(e.target.value)}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω"
                className="rounded-xl"
              />
            </div>
            <div>
              <Label htmlFor="admin-password" className="mb-2 block">–ü–∞—Ä–æ–ª—å</Label>
              <Input
                id="admin-password"
                type="password"
                value={adminPassword}
                onChange={(e) => setAdminPassword(e.target.value)}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                className="rounded-xl"
                onKeyPress={(e) => e.key === 'Enter' && handleAdminLogin()}
              />
            </div>
            <div className="flex gap-3">
              <Button
                onClick={handleAdminLogin}
                className="flex-1 rounded-xl bg-gradient-to-r from-red-500 to-pink-600 hover:from-red-600 hover:to-pink-700"
              >
                <Icon name="Shield" className="mr-2" size={18} />
                –í–æ–π—Ç–∏
              </Button>
              <Button
                onClick={() => {
                  setShowAdminLogin(false);
                  setAdminUsername('');
                  setAdminPassword('');
                }}
                variant="outline"
                className="flex-1 rounded-xl"
              >
                –û—Ç–º–µ–Ω–∞
              </Button>
            </div>
          </div>
        )}

        {user.role !== 'guest' && (
          <Button
            onClick={handleLogout}
            variant="outline"
            className="w-full rounded-xl border-2"
          >
            <Icon name="LogOut" className="mr-2" size={18} />
            –í—ã–π—Ç–∏
          </Button>
        )}
      </Card>

      {user.role === 'admin' && (
        <Card className="p-8 bg-gradient-to-br from-red-50 to-pink-50 border-red-200 shadow-xl rounded-2xl">
          <div className="flex items-center gap-3 mb-6">
            <div className="w-12 h-12 rounded-xl bg-gradient-to-br from-red-500 to-pink-600 flex items-center justify-center">
              <Icon name="Settings" className="text-white" size={24} />
            </div>
            <h3 className="text-xl font-bold">–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</h3>
          </div>

          <div className="space-y-4">
            <div>
              <Label className="mb-2 block font-medium">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ PRO —Å—Ç–∞—Ç—É—Å–æ–º</Label>
              <div className="flex gap-3">
                <Button
                  onClick={grantProAccess}
                  className="flex-1 rounded-xl bg-gradient-to-r from-green-500 to-emerald-600 hover:from-green-600 hover:to-emerald-700"
                >
                  <Icon name="Check" className="mr-2" size={18} />
                  –í—ã–¥–∞—Ç—å PRO
                </Button>
                <Button
                  onClick={revokeProAccess}
                  variant="outline"
                  className="flex-1 rounded-xl border-2"
                >
                  <Icon name="X" className="mr-2" size={18} />
                  –û—Ç–æ–∑–≤–∞—Ç—å PRO
                </Button>
              </div>
            </div>

            <div className="p-4 bg-white rounded-xl border-2 border-red-200">
              <div className="flex items-start gap-3">
                <Icon name="Info" className="text-red-500 mt-1" size={20} />
                <div>
                  <p className="font-medium mb-1">–ü—Ä–∏–≤–∏–ª–µ–≥–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:</p>
                  <ul className="text-sm text-gray-600 space-y-1">
                    <li>‚Ä¢ –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ AI</li>
                    <li>‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ PRO —Å—Ç–∞—Ç—É—Å–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</li>
                    <li>‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤</li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </Card>
      )}
    </div>
  );
};

export default ProfileSection;