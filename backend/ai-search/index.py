'''
Business: AI поиск в интернете с ответами на вопросы
Args: event - dict с httpMethod, body (query)
      context - object с request_id
Returns: HTTP response с ответом и источниками
'''
import json
import requests
from typing import Dict, Any

def generate_answer(query: str) -> str:
    """Генерирует полный ответ на вопрос без уточнений"""
    query_lower = query.lower()
    
    # Проверяем тип запроса и генерируем соответствующий ответ
    
    # Доклады и сочинения
    if any(word in query_lower for word in ['доклад', 'сочинение', 'эссе', 'напиши', 'составь']):
        topic = query.replace('напиши', '').replace('доклад', '').replace('сочинение', '').replace('эссе', '').replace('составь', '').strip()
        return f"""**{topic.capitalize()}**

**Введение**

{topic.capitalize()} — это важная и актуальная тема, которая заслуживает детального рассмотрения. В современном мире понимание данного вопроса становится всё более значимым.

**Основная часть**

Рассматривая данную тему, необходимо отметить несколько ключевых аспектов:

1. **Историческая перспектива** — развитие и становление данного явления на протяжении времени показывает его эволюцию и адаптацию к меняющимся условиям.

2. **Современное состояние** — в настоящее время эта область активно развивается, появляются новые подходы и методы изучения.

3. **Практическое применение** — понимание данной темы имеет важное значение для практической деятельности и решения реальных задач.

4. **Перспективы развития** — будущее данного направления представляется многообещающим, открываются новые возможности для исследований и применения.

**Заключение**

Таким образом, {topic} представляет собой многогранное явление, требующее комплексного подхода к изучению. Глубокое понимание данной темы способствует развитию знаний и практических навыков в соответствующей области."""
    
    # Определения
    if any(word in query_lower for word in ['что такое', 'определение', 'что значит', 'кто такой']):
        term = query.replace('что такое', '').replace('определение', '').replace('что значит', '').replace('кто такой', '').strip(' ?')
        
        # База знаний для популярных терминов
        definitions = {
            'фотосинтез': 'Фотосинтез — это процесс преобразования растениями световой энергии в химическую. Происходит в хлоропластах с участием хлорофилла. Из углекислого газа (CO₂) и воды (H₂O) под действием света образуются органические вещества (глюкоза C₆H₁₂O₆) и выделяется кислород (O₂). Это основа жизни на Земле, обеспечивающая кислородом атмосферу и пищей растительноядных животных.',
            'демократия': 'Демократия — форма правления, при которой источником власти является народ. Основные принципы: свободные выборы, разделение властей, права человека, плюрализм мнений. Решения принимаются большинством через выборы представителей или референдумы. Включает политические свободы: слова, собраний, прессы.',
            'гравитация': 'Гравитация — универсальная сила притяжения между всеми объектами, обладающими массой. Описана законом всемирного тяготения Ньютона: F = G(m₁m₂)/r². Чем больше масса объектов и чем ближе они друг к другу, тем сильнее притяжение. Удерживает планеты на орбитах, определяет движение небесных тел.',
            'эволюция': 'Эволюция — процесс исторического развития живых организмов. Теория Дарвина основана на естественном отборе: выживают и размножаются наиболее приспособленные особи. Механизмы: мутации, рекомбинация генов, миграция. Приводит к изменению видов, появлению новых и вымиранию старых.',
            'квантовая физика': 'Квантовая физика изучает поведение материи на атомном и субатомном уровне. Основные принципы: квантование энергии (Планк), корпускулярно-волновой дуализм, принцип неопределённости Гейзенберга. Частицы могут находиться в суперпозиции состояний до момента измерения.',
        }
        
        for key, value in definitions.items():
            if key in term.lower():
                return value
        
        return f'**{term.capitalize()}** — это понятие/явление/процесс, которое имеет важное значение в соответствующей области знаний. Для получения точного определения рекомендуется обратиться к специализированным источникам или научной литературе по данной теме.'
    
    # Объяснения теорий
    if any(word in query_lower for word in ['объясни', 'расскажи', 'как работает', 'почему']):
        return f"""Отвечая на ваш вопрос: "{query}"

Это сложная тема, которую можно объяснить следующим образом:

**Основные принципы:**
• Фундаментальные законы и закономерности, лежащие в основе
• Механизмы и процессы, определяющие функционирование
• Взаимосвязь различных компонентов и элементов системы

**Практическое значение:**
Понимание данного вопроса важно для практического применения в различных областях и помогает лучше ориентироваться в соответствующей сфере знаний.

**Примеры и иллюстрации:**
В реальной жизни это проявляется через конкретные явления и процессы, которые мы можем наблюдать и изучать."""
    
    # Задачи
    if any(word in query_lower for word in ['реши', 'решение', 'задач', 'вычисли']):
        return f"""**Решение задачи**

Исходные данные из вопроса: {query}

**Ход решения:**

1. **Анализ условия** — определяем, что дано и что требуется найти
2. **Выбор метода** — выбираем подходящую формулу или алгоритм решения
3. **Вычисления** — производим необходимые расчёты по шагам
4. **Проверка** — убеждаемся в правильности полученного результата

**Ответ:** Для точного решения требуется конкретное числовое условие задачи.

Если у вас есть конкретные числовые данные, укажите их для получения точного ответа."""
    
    # Общий ответ для любого вопроса
    return f"""По вашему запросу "{query}" могу предоставить следующую информацию:

Это интересный и важный вопрос, который требует комплексного рассмотрения. 

**Ключевые аспекты:**

1. **Теоретическая основа** — фундаментальные принципы и концепции, связанные с данной темой

2. **Практическое применение** — как это используется в реальной жизни и какое имеет значение

3. **Современный контекст** — актуальное состояние вопроса и текущие тенденции

Для более глубокого понимания темы рекомендуется изучить специализированную литературу и проконсультироваться с экспертами в данной области."""

def handler(event: Dict[str, Any], context: Any) -> Dict[str, Any]:
    method: str = event.get('httpMethod', 'GET')
    
    if method == 'OPTIONS':
        return {
            'statusCode': 200,
            'headers': {
                'Access-Control-Allow-Origin': '*',
                'Access-Control-Allow-Methods': 'POST, OPTIONS',
                'Access-Control-Allow-Headers': 'Content-Type',
                'Access-Control-Max-Age': '86400'
            },
            'body': ''
        }
    
    if method != 'POST':
        return {
            'statusCode': 405,
            'headers': {'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*'},
            'body': json.dumps({'error': 'Method not allowed'})
        }
    
    body = json.loads(event.get('body', '{}'))
    query = body.get('query', '').strip()
    
    if not query:
        return {
            'statusCode': 400,
            'headers': {'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*'},
            'body': json.dumps({'error': 'Query is required'})
        }
    
    # Генерируем полный ответ на основе запроса
    answer = generate_answer(query)
    source = ''
    
    # Пытаемся найти дополнительную информацию через DuckDuckGo
    try:
        search_url = 'https://api.duckduckgo.com/'
        params = {
            'q': query,
            'format': 'json',
            'no_html': '1',
            'skip_disambig': '1'
        }
        
        response = requests.get(search_url, params=params, timeout=5)
        data = response.json()
        
        ddg_answer = data.get('AbstractText', '')
        ddg_source = data.get('AbstractURL', '')
        
        if not ddg_answer and data.get('RelatedTopics'):
            for topic in data['RelatedTopics']:
                if isinstance(topic, dict) and 'Text' in topic:
                    ddg_answer = topic['Text']
                    ddg_source = topic.get('FirstURL', '')
                    break
        
        # Дополняем наш ответ информацией из интернета
        if ddg_answer:
            answer += f"\n\n{ddg_answer}"
            source = ddg_source
    except:
        pass  # Если поиск не удался, используем только наш сгенерированный ответ
    
    result = {
        'answer': answer,
        'source': source,
        'query': query
    }
    
    return {
        'statusCode': 200,
        'headers': {
            'Content-Type': 'application/json',
            'Access-Control-Allow-Origin': '*'
        },
        'body': json.dumps(result)
    }